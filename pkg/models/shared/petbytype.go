// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PetByTypePetType string

const (
	PetByTypePetTypeCat PetByTypePetType = "Cat"
	PetByTypePetTypeDog PetByTypePetType = "Dog"
)

func (e PetByTypePetType) ToPointer() *PetByTypePetType {
	return &e
}

func (e *PetByTypePetType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Cat":
		fallthrough
	case "Dog":
		*e = PetByTypePetType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PetByTypePetType: %v", v)
	}
}

type PetByType struct {
	Hunts   *bool            `json:"hunts,omitempty"`
	PetType PetByTypePetType `json:"pet_type"`
}

func (o *PetByType) GetHunts() *bool {
	if o == nil {
		return nil
	}
	return o.Hunts
}

func (o *PetByType) GetPetType() PetByTypePetType {
	if o == nil {
		return PetByTypePetType("")
	}
	return o.PetType
}
